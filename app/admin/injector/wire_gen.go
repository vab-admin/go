// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"vab-admin/go/app/admin/handler"
	"vab-admin/go/app/admin/repository"
	"vab-admin/go/app/admin/router"
	"vab-admin/go/app/admin/service"
	"vab-admin/go/pkg/config"
)

// Injectors from wire.go:

// CreateApp
// @date 2023-05-07 19:04:57
func CreateApp(conf config.Config) (*Injector, error) {
	enforcer, err := service.NewCasbin(conf)
	if err != nil {
		return nil, err
	}
	adminGroup := &repository.AdminGroup{}
	adminUserGroup := &repository.AdminUserGroup{}
	serviceAdminUserGroup := &service.AdminUserGroup{
		AdminGroupRepo:     adminGroup,
		AdminUserGroupRepo: adminUserGroup,
	}
	adminUser := &repository.AdminUser{}
	serviceAdminUser := &service.AdminUser{
		EnforcerService:       enforcer,
		AdminUserGroupService: serviceAdminUserGroup,
		AdminUserRepo:         adminUser,
	}
	handlerAdminUser := handler.NewAdminUser(serviceAdminUser)
	systemApi := &repository.SystemApi{}
	adminRuleApi := &repository.AdminRuleApi{}
	serviceAdminRuleApi := &service.AdminRuleApi{
		SystemApiRepo:    systemApi,
		AdminRuleApiRepo: adminRuleApi,
	}
	adminRule := &repository.AdminRule{}
	serviceAdminRule := &service.AdminRule{
		EnforcerService:     enforcer,
		AdminRuleApiService: serviceAdminRuleApi,
		AdminRuleRepo:       adminRule,
	}
	handlerAdminRule := &handler.AdminRule{
		AdminRuleService: serviceAdminRule,
	}
	adminGroupRule := &repository.AdminGroupRule{}
	serviceAdminGroupRule := &service.AdminGroupRule{
		AdminRuleRepo:      adminRule,
		AdminGroupRuleRepo: adminGroupRule,
	}
	serviceAdminGroup := &service.AdminGroup{
		EnforcerService:       enforcer,
		AdminGroupRuleService: serviceAdminGroupRule,
		AdminGroupRepo:        adminGroup,
	}
	handlerAdminGroup := &handler.AdminGroup{
		AdminGroupService: serviceAdminGroup,
	}
	serviceSystemApi := &service.SystemApi{
		SystemApiRepo: systemApi,
	}
	handlerSystemApi := &handler.SystemApi{
		SystemApiService: serviceSystemApi,
	}
	route := &router.Route{
		Enforcer:          enforcer,
		AdminUserHandler:  handlerAdminUser,
		AdminRuleHandler:  handlerAdminRule,
		AdminGroupHandler: handlerAdminGroup,
		SystemApiHandler:  handlerSystemApi,
	}
	echo := newApp(route)
	injector := &Injector{
		App: echo,
	}
	return injector, nil
}
